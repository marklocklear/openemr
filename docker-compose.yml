#
# This is for building a local OpenEMR development and testing environment.
# (Recommend not running it from your git repo and instead mirroring your
#  git repo to a testing directory (such as your web directory).)
#
# Brief instructions on how to use (for fuller instructions and examples,
#  see the document at contrib/util/docker/README.md):
#   1. docker-compose up -d
#   2. http://localhost:8080 to run setup in openemr (alpine 3.7 with PHP 7.1)
#      or
#      https://localhost:8090 to run setup in openemr with SSL (alpine 3.7 with PHP 7.1)
#      or
#      http://localhost:8081 to run setup in openemr (alpine edge with PHP 7.2)
#      or
#      https://localhost:8091 to run setup in openemr with SSL (alpine edge with PHP 7.2)
#  On the main setup input screen:
#   1. for Server Host, use either 'mariadb' or 'mysql' or `mariadb-dev` or 'mysql-dev' or 'mysql-old' or 'mysql-very-old' or 'mariadb-old' or 'mariadb-very-old' or 'mariadb-very-very-old'  (have both mariadb/mysql/mariadb-dev/mysql-dev dockers ready to go make testing either one easy; mysql is version 5.7; mysql-dev is version 8; mysql-old is version 5.6; mysql-very-old is version 5.5; mariadb is version 10.2 and mariadb-dev is version 10.3; mariadb-old is version 10.1; mariadb-very-old is version 10.0; mariadb-very-very-old is version 5.5)
#   2. for Root Pass, use 'root'
#   3. for User Hostname, use '%'
#  And when need to tear it down and restart it
#   1. docker-compose down -v
#   2. docker-compose up -d
#  Can see databases via http://localhost:8100
#
version: '3.1'
services:
  openemr-7-1:
    restart: always
    image: openemr/openemr:flex
    ports:
    - 8080:80
    - 8090:443
    volumes:
    - .:/var/www/localhost/htdocs/openemr
    environment:
      EMPTY: "yes"
  openemr-7-2:
    restart: always
    image: openemr/openemr:flex-edge
    ports:
    - 8081:80
    - 8091:443
    volumes:
    - .:/var/www/localhost/htdocs/openemr
    environment:
      EMPTY: "yes"
  mariadb:
    restart: always
    image: mariadb:10.2
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mysql:
    restart: always
    image: mysql:5.7
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mariadb-dev:
    restart: always
    image: mariadb:10.3
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mysql-dev:
    restart: always
    image: mysql:8
    command: ['mysqld','--character-set-server=utf8','--default-authentication-plugin=mysql_native_password']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mariadb-old:
    restart: always
    image: mariadb:10.1
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mariadb-very-old:
    restart: always
    image: mariadb:10.0
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mariadb-very-very-old:
    restart: always
    image: mariadb:5.5
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mysql-old:
    restart: always
    image: mysql:5.6
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  mysql-very-old:
    restart: always
    image: mysql:5.5
    command: ['mysqld','--character-set-server=utf8']
    environment:
      MYSQL_ROOT_PASSWORD: root
  phpmyadmin:
    restart: always
    image: phpmyadmin/phpmyadmin
    ports:
    - 8100:80
    environment:
      PMA_HOSTS: mariadb,mysql,mariadb-dev,mysql-dev,mysql-old,mysql-very-old,mariadb-old,mariadb-very-old,mariadb-very-very-old
  couchdb:
    restart: always
    image: couchdb
    ports:
    - 5984:5984
    - 6984:6984
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password
  orthanc:
    restart: always
    image: jodogne/orthanc-plugins
    ports:
    - 4242:4242
    - 8042:8042
